/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.philips.gdl;

import com.bulenkov.darcula.DarculaLaf;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.plaf.basic.BasicLookAndFeel;

/**
 *
 * @author efsantos
 */
public class telaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form telaPrincipal
     */
    public telaPrincipal() {
        initComponents();
        this.objetoListaVariaveis.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    itemListaVariavelObjetoSelecionado();
                }
            }

        });
        this.tabelaListaVariaveis.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    itemListaVariavelTabelaSelecionado();
                }
            }

        });
        tabelaTxtChavePrimaria.setEnabled(false);
    }

    private static List<String> objetosListaAtributos = new ArrayList<String>();
    private static LinkedHashMap<String, String> tabelaListaAtributos = new LinkedHashMap();
    private String dsNomeObjetoTabelaLog = "SO";
    private String dsNomeTabelaTabelaLog = "SO";
    private String dsScriptObjetoTabelaLog
            = "CREATE SEQUENCE " + dsNomeObjetoTabelaLog + "_seq START WITH 1; \n"
            + "CREATE TABLE " + dsNomeObjetoTabelaLog + " (\n"
            + "ID           NUMBER(10),\n"
            + "	DS_LOG VARCHAR2(4000),\n"
            + "	DS_COMANDO VARCHAR2(4000),\n"
            + "	DT_DATA DATE);"
            + "ALTER TABLE " + dsNomeObjetoTabelaLog + " ADD (\n"
            + "CONSTRAINT " + dsNomeObjetoTabelaLog + "_pk PRIMARY KEY (ID));";
    private String dsScriptTabelaTabelaLog
            = "CREATE SEQUENCE " + dsNomeTabelaTabelaLog + "_seq START WITH 1; \n"
            + "CREATE TABLE " + dsNomeTabelaTabelaLog + " (\n"
            + "ID           NUMBER(10),\n"
            + "	DS_LOG VARCHAR2(4000),\n"
            + "	DS_COMANDO VARCHAR2(4000),\n"
            + "	DT_DATA DATE);"
            + "ALTER TABLE " + dsNomeTabelaTabelaLog + " ADD (\n"
            + "CONSTRAINT " + dsNomeTabelaTabelaLog + "_pk PRIMARY KEY (ID));";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tpAbaPane = new javax.swing.JTabbedPane();
        tbAbaObjeto = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dsScriptOriginal = new javax.swing.JTextArea();
        objetoBtAddVariavel = new javax.swing.JToggleButton();
        objetoBtRemoveVariavel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        objetoListaVariaveis = new javax.swing.JList();
        objetoNmObjeto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        objetoNmTabelaLog = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        objetoDsCreateTable = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        objetoBtnGerar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        objetoDsScriptSaida = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        objetoBtAtualiza = new javax.swing.JToggleButton();
        checkBoxQuebra1 = new javax.swing.JLabel();
        checkBoxQuebra3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jchboxStackTrace = new javax.swing.JCheckBox();
        objetoJrbDias = new javax.swing.JRadioButton();
        jSeparator4 = new javax.swing.JSeparator();
        objetoJrbMaskCompleta = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        checkBoxQuebra2 = new javax.swing.JLabel();
        txtVariavelTextoCondicao = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        checkBoxQuebra = new javax.swing.JLabel();
        objetoJrbSemMask = new javax.swing.JRadioButton();
        jchboxCommitInsert = new javax.swing.JCheckBox();
        jchboxQuebraLinha = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        objetoDsScriptLimpar = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        objetoJrbHoras = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        objetoBtSubirVariavel = new javax.swing.JToggleButton();
        objetoBtDescerVariavel = new javax.swing.JToggleButton();
        checkBoxQuebra4 = new javax.swing.JLabel();
        jchboxDsComando = new javax.swing.JCheckBox();
        jSeparator9 = new javax.swing.JSeparator();
        txtVariavelNome = new javax.swing.JTextField();
        tbAbaTabela = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        tabelaJrbHoras = new javax.swing.JRadioButton();
        tabelaJrbDias = new javax.swing.JRadioButton();
        tabelaJrBMaskCompleta = new javax.swing.JRadioButton();
        tabelaJrbSemMask = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        tabelaBtRemoveVariavel = new javax.swing.JButton();
        tabelaBtAddVariavel = new javax.swing.JToggleButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelaListaVariaveis = new javax.swing.JList();
        tabelaNmTabelaLog = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        tabelaBtAtualiza = new javax.swing.JToggleButton();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabelaDsCreateTable = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        nmTabelaTxt = new javax.swing.JTextField();
        tabelaLabel = new javax.swing.JLabel();
        tabelaBtGerarTrigger = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tabelaDsTrigger = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tabelaDsDeleteTable = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        tabelaNmChavePrimaria = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tabelaTxtChavePrimaria = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        tabelaLabel1 = new javax.swing.JLabel();
        nmTriggerTxt = new javax.swing.JTextField();
        tabelaBtSubirVariavel = new javax.swing.JToggleButton();
        tabelaBtDescerVariavel = new javax.swing.JToggleButton();
        txtTabelaVariavelTextoCondicao = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTabelaVariavelNome = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerador de logs");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        dsScriptOriginal.setColumns(20);
        dsScriptOriginal.setRows(5);
        jScrollPane1.setViewportView(dsScriptOriginal);

        objetoBtAddVariavel.setText("+");
        objetoBtAddVariavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objetoBtAddVariavelActionPerformed(evt);
            }
        });

        objetoBtRemoveVariavel.setText("-");
        objetoBtRemoveVariavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objetoBtRemoveVariavelActionPerformed(evt);
            }
        });

        objetoListaVariaveis.setModel(new javax.swing.AbstractListModel() {
            String variaveis[] = objetosListaAtributos.toArray(new String[0]);
            //nomeObjetos.toArray(new String[objetosListaAtributos.size()]);
            public int getSize() { return variaveis.length; }
            public Object getElementAt(int i) { return variaveis[i]; }
        });
        jScrollPane2.setViewportView(objetoListaVariaveis);

        objetoNmObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objetoNmObjetoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome objeto.");

        objetoNmTabelaLog.setText("SO");
        objetoNmTabelaLog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                objetoNmTabelaLogKeyTyped(evt);
            }
        });

        jLabel2.setText("Nome da tabela de log (Exemplo : SO180000)");

        jLabel3.setText("Made by github.com/efsant0s");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setText("Variáveis para incluir nos logs");

        jLabel5.setText("Script original");

        objetoDsCreateTable.setColumns(20);
        objetoDsCreateTable.setRows(5);
        jScrollPane3.setViewportView(objetoDsCreateTable);

        jLabel6.setText("Script de criação de tabela de log");

        objetoBtnGerar.setText("GERAR SCRIPT COM LOGS");
        objetoBtnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objetoBtnGerarActionPerformed(evt);
            }
        });

        objetoDsScriptSaida.setColumns(20);
        objetoDsScriptSaida.setRows(5);
        jScrollPane4.setViewportView(objetoDsScriptSaida);

        jLabel7.setText("Saída de script");

        objetoBtAtualiza.setText("Refresh");
        objetoBtAtualiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objetoBtAtualizaActionPerformed(evt);
            }
        });

        checkBoxQuebra1.setText("Commit depois insert");

        checkBoxQuebra3.setText("Deletar tabela e sequences");

        jLabel8.setText("Máscara para datas");

        jchboxStackTrace.setSelected(true);
        jchboxStackTrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchboxStackTraceActionPerformed(evt);
            }
        });

        buttonGroup1.add(objetoJrbDias);
        objetoJrbDias.setText("dd/mm/yyyy");

        buttonGroup1.add(objetoJrbMaskCompleta);
        objetoJrbMaskCompleta.setSelected(true);
        objetoJrbMaskCompleta.setText("dd/mm/yyyy h24:mi:ss");

        checkBoxQuebra2.setText("Incluir StackTrace");

        checkBoxQuebra.setText("Quebra Linha");

        buttonGroup1.add(objetoJrbSemMask);
        objetoJrbSemMask.setText("Sem máscara");

        jchboxCommitInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchboxCommitInsertActionPerformed(evt);
            }
        });

        jchboxQuebraLinha.setSelected(true);
        jchboxQuebraLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchboxQuebraLinhaActionPerformed(evt);
            }
        });

        objetoDsScriptLimpar.setColumns(20);
        objetoDsScriptLimpar.setRows(5);
        jScrollPane5.setViewportView(objetoDsScriptLimpar);

        jLabel11.setText("For:");

        buttonGroup1.add(objetoJrbHoras);
        objetoJrbHoras.setText("h24:mi:ss");

        jLabel9.setText("Cair apenas se a variável");

        objetoBtSubirVariavel.setText("/\\");
            objetoBtSubirVariavel.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    objetoBtSubirVariavelActionPerformed(evt);
                }
            });

            objetoBtDescerVariavel.setText("\\/");
            objetoBtDescerVariavel.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    objetoBtDescerVariavelActionPerformed(evt);
                }
            });

            checkBoxQuebra4.setText("Incluir DS_COMANDO");

            jchboxDsComando.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jchboxDsComandoActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout tbAbaObjetoLayout = new javax.swing.GroupLayout(tbAbaObjeto);
            tbAbaObjeto.setLayout(tbAbaObjetoLayout);
            tbAbaObjetoLayout.setHorizontalGroup(
                tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(objetoBtnGerar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tbAbaObjetoLayout.createSequentialGroup()
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel6)
                                        .addComponent(objetoNmTabelaLog, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objetoBtAtualiza))
                                .addComponent(objetoNmObjeto)
                                .addComponent(jScrollPane3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaObjetoLayout.createSequentialGroup()
                                    .addComponent(objetoBtAddVariavel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(objetoBtRemoveVariavel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(objetoBtSubirVariavel)
                        .addComponent(objetoBtDescerVariavel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaObjetoLayout.createSequentialGroup()
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtVariavelNome, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator3)
                                .addComponent(jSeparator4)
                                .addComponent(jSeparator5)
                                .addComponent(jSeparator6)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(checkBoxQuebra3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtVariavelTextoCondicao, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator9)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tbAbaObjetoLayout.createSequentialGroup()
                                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(objetoJrbMaskCompleta)
                                        .addComponent(objetoJrbSemMask)
                                        .addComponent(objetoJrbDias)
                                        .addComponent(checkBoxQuebra1)
                                        .addComponent(checkBoxQuebra)
                                        .addComponent(checkBoxQuebra2)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel8)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(objetoJrbHoras)
                                        .addComponent(checkBoxQuebra4))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jchboxStackTrace)
                                        .addComponent(jchboxCommitInsert)
                                        .addComponent(jchboxQuebraLinha)
                                        .addComponent(jchboxDsComando))))
                            .addGap(13, 13, 13))
                        .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            );
            tbAbaObjetoLayout.setVerticalGroup(
                tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                            .addGap(33, 33, 33)
                                            .addComponent(jScrollPane2))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(objetoBtAddVariavel)
                                            .addComponent(objetoBtRemoveVariavel))
                                        .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                            .addComponent(objetoNmObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(objetoNmTabelaLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(objetoBtAtualiza))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel6)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(objetoBtnGerar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7)
                            .addGap(12, 12, 12)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel3)
                            .addGap(6, 6, 6))
                        .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(objetoJrbSemMask)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(objetoJrbMaskCompleta)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(objetoJrbDias)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(objetoJrbHoras)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(objetoBtSubirVariavel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtVariavelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(objetoBtDescerVariavel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtVariavelTextoCondicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jchboxQuebraLinha)
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addComponent(checkBoxQuebra)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jchboxCommitInsert)
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addComponent(checkBoxQuebra1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addComponent(checkBoxQuebra2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jchboxStackTrace))
                            .addGap(1, 1, 1)
                            .addGroup(tbAbaObjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tbAbaObjetoLayout.createSequentialGroup()
                                    .addComponent(checkBoxQuebra4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jchboxDsComando))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(checkBoxQuebra3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
            );

            tpAbaPane.addTab("Objetos", tbAbaObjeto);

            buttonGroup2.add(tabelaJrbHoras);
            tabelaJrbHoras.setText("h24:mi:ss");

            buttonGroup2.add(tabelaJrbDias);
            tabelaJrbDias.setText("dd/mm/yyyy");

            buttonGroup2.add(tabelaJrBMaskCompleta);
            tabelaJrBMaskCompleta.setSelected(true);
            tabelaJrBMaskCompleta.setText("dd/mm/yyyy h24:mi:ss");

            buttonGroup2.add(tabelaJrbSemMask);
            tabelaJrbSemMask.setText("Sem máscara");

            jLabel15.setText("Máscara para datas");

            tabelaBtRemoveVariavel.setText("-");
            tabelaBtRemoveVariavel.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tabelaBtRemoveVariavelActionPerformed(evt);
                }
            });

            tabelaBtAddVariavel.setText("+");
            tabelaBtAddVariavel.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tabelaBtAddVariavelActionPerformed(evt);
                }
            });

            jLabel16.setText("Variáveis da tabela para incluir nos logs");

            tabelaListaVariaveis.setModel(new javax.swing.AbstractListModel() {
                String variaveis[] = objetosListaAtributos.toArray(new String[0]);
                //nomeObjetos.toArray(new String[objetosListaAtributos.size()]);
                public int getSize() { return variaveis.length; }
                public Object getElementAt(int i) { return variaveis[i]; }
            });
            tabelaListaVariaveis.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                public void propertyChange(java.beans.PropertyChangeEvent evt) {
                    tabelaListaVariaveisPropertyChange(evt);
                }
            });
            jScrollPane7.setViewportView(tabelaListaVariaveis);

            tabelaNmTabelaLog.setText("SO");
            tabelaNmTabelaLog.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    tabelaNmTabelaLogKeyTyped(evt);
                }
            });

            jLabel18.setText("Nome da tabela de log (Exemplo : SO180000)");

            tabelaBtAtualiza.setText("Refresh");
            tabelaBtAtualiza.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tabelaBtAtualizaActionPerformed(evt);
                }
            });

            jLabel19.setText("Script de criação de tabela de log");

            tabelaDsCreateTable.setColumns(20);
            tabelaDsCreateTable.setRows(5);
            jScrollPane8.setViewportView(tabelaDsCreateTable);

            jLabel21.setText("Made by github.com/efsant0s");
            jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jLabel21MouseClicked(evt);
                }
            });

            nmTabelaTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    nmTabelaTxtActionPerformed(evt);
                }
            });

            tabelaLabel.setText("Nome da Tabela");

            tabelaBtGerarTrigger.setText("Gerar Trigger!");
            tabelaBtGerarTrigger.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tabelaBtGerarTriggerActionPerformed(evt);
                }
            });

            tabelaDsTrigger.setColumns(20);
            tabelaDsTrigger.setRows(5);
            jScrollPane9.setViewportView(tabelaDsTrigger);

            jLabel20.setText("Saída trigger criada");

            tabelaDsDeleteTable.setColumns(20);
            tabelaDsDeleteTable.setRows(5);
            jScrollPane10.setViewportView(tabelaDsDeleteTable);

            jLabel22.setText("Script para excluir a tabela de logs e a trigger criada");

            tabelaNmChavePrimaria.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    tabelaNmChavePrimariaFocusLost(evt);
                }
            });
            tabelaNmChavePrimaria.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    tabelaNmChavePrimariaActionPerformed(evt);
                }
            });

            jLabel17.setText("(Deixar vazio em caso de várias PKS)");

            jLabel23.setText("(Vazio para nada)");

            jLabel24.setText("Cair apenas quando a chave primária for:");

            tabelaLabel1.setText("Nome da Trigger, EX: Temp_Trigg_SO2044");

            nmTriggerTxt.setText("Temp_Trigger_");
            nmTriggerTxt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    nmTriggerTxtActionPerformed(evt);
                }
            });

            tabelaBtSubirVariavel.setText("/\\");
                tabelaBtSubirVariavel.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        tabelaBtSubirVariavelActionPerformed(evt);
                    }
                });

                tabelaBtDescerVariavel.setText("\\/");
                tabelaBtDescerVariavel.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        tabelaBtDescerVariavelActionPerformed(evt);
                    }
                });

                jLabel12.setText("For:");

                jLabel10.setText("Cair apenas se a variável");

                jLabel25.setText("Nome da chave primária");

                javax.swing.GroupLayout tbAbaTabelaLayout = new javax.swing.GroupLayout(tbAbaTabela);
                tbAbaTabela.setLayout(tbAbaTabelaLayout);
                tbAbaTabelaLayout.setHorizontalGroup(
                    tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane8)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaTabelaLayout.createSequentialGroup()
                                        .addComponent(tabelaNmTabelaLog)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tabelaBtAtualiza))
                                    .addComponent(jScrollPane10)
                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel22))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addComponent(tabelaLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(nmTabelaTxt)
                                                    .addComponent(tabelaNmChavePrimaria, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel17)
                                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tbAbaTabelaLayout.createSequentialGroup()
                                                                        .addComponent(tabelaBtAddVariavel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(tabelaBtRemoveVariavel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(tabelaBtSubirVariavel)
                                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaTabelaLayout.createSequentialGroup()
                                                                        .addComponent(tabelaBtDescerVariavel)
                                                                        .addGap(1, 1, 1))))
                                                            .addComponent(jLabel25))
                                                        .addGap(0, 2, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSeparator12)
                                            .addComponent(jSeparator8)
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addGap(99, 100, Short.MAX_VALUE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaTabelaLayout.createSequentialGroup()
                                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaTabelaLayout.createSequentialGroup()
                                                                .addComponent(jLabel12)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                            .addComponent(txtTabelaVariavelTextoCondicao, javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(txtTabelaVariavelNome, javax.swing.GroupLayout.Alignment.TRAILING))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addComponent(jLabel13))
                                            .addComponent(nmTriggerTxt)
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel24)
                                                    .addComponent(tabelaTxtChavePrimaria)))
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(tabelaJrBMaskCompleta)
                                                    .addComponent(tabelaJrbSemMask)
                                                    .addComponent(tabelaJrbDias)
                                                    .addComponent(jLabel15)
                                                    .addComponent(tabelaJrbHoras)
                                                    .addComponent(tabelaLabel1)
                                                    .addComponent(jLabel23))
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addGap(18, 18, 18)
                                .addComponent(tabelaBtGerarTrigger, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20)))
                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                );
                tbAbaTabelaLayout.setVerticalGroup(
                    tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tabelaLabel)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane9)
                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                        .addComponent(nmTabelaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaTabelaLayout.createSequentialGroup()
                                                .addComponent(jLabel25)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tbAbaTabelaLayout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tabelaJrbSemMask)))
                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(tabelaBtRemoveVariavel)
                                                    .addComponent(tabelaBtAddVariavel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                        .addComponent(tabelaBtSubirVariavel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(tabelaBtDescerVariavel))
                                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18))
                                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(tabelaJrBMaskCompleta)
                                                    .addComponent(tabelaNmChavePrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tabelaJrbDias)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tabelaJrbHoras)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel24)
                                                .addGap(1, 1, 1)
                                                .addComponent(jLabel23)
                                                .addGap(12, 12, 12)
                                                .addComponent(tabelaTxtChavePrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                        .addGap(37, 37, 37)
                                                        .addComponent(jLabel13))
                                                    .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel10)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtTabelaVariavelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel12)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTabelaVariavelTextoCondicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(tbAbaTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tabelaNmTabelaLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tabelaBtAtualiza))
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                                    .addComponent(tabelaBtGerarTrigger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(tbAbaTabelaLayout.createSequentialGroup()
                                .addComponent(tabelaLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nmTriggerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addGap(8, 8, 8))
                );

                tpAbaPane.addTab("Tabelas", tbAbaTabela);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tpAbaPane)
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tpAbaPane)
                        .addContainerGap())
                );

                pack();
                setLocationRelativeTo(null);
            }// </editor-fold>//GEN-END:initComponents

    private void objetoNmObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoNmObjetoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objetoNmObjetoActionPerformed

    private void objetoNmTabelaLogKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_objetoNmTabelaLogKeyTyped

    }//GEN-LAST:event_objetoNmTabelaLogKeyTyped

    private void objetoBtAddVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoBtAddVariavelActionPerformed
        objetoAdicionaVariavel();
        itemListaVariavelObjetoSelecionado();
    }//GEN-LAST:event_objetoBtAddVariavelActionPerformed

    private void objetoBtRemoveVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoBtRemoveVariavelActionPerformed
        objetoRemoveVariavel();
        itemListaVariavelObjetoSelecionado();
    }//GEN-LAST:event_objetoBtRemoveVariavelActionPerformed

    private void objetoBtAtualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoBtAtualizaActionPerformed
        objetoAtualizaScript();
    }//GEN-LAST:event_objetoBtAtualizaActionPerformed

    private void objetoBtnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoBtnGerarActionPerformed
        objetoBtnGerarAction();

    }//GEN-LAST:event_objetoBtnGerarActionPerformed

    private void jchboxQuebraLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchboxQuebraLinhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchboxQuebraLinhaActionPerformed

    private void jchboxCommitInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchboxCommitInsertActionPerformed
        if (jchboxCommitInsert.isSelected()) {
            JOptionPane.showMessageDialog(null, "Cuidado! dependendo do objeto, esse commit pode desestruturar o escopo todo. \nUse com cuidado.");
        }
    }//GEN-LAST:event_jchboxCommitInsertActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        if (evt.getClickCount() == 10) {
            JOptionPane.showMessageDialog(null, "¯\\_(ツ)_/¯");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jchboxStackTraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchboxStackTraceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchboxStackTraceActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        if (JOptionPane.showConfirmDialog(null, "Não esqueça de compilar o objeto original sem logs e deletar as tabelas, triggers e sequences criadas!\nDeseja realmente sair?") != JOptionPane.YES_OPTION) {
            this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        } else {
            System.exit(1);
        }
    }//GEN-LAST:event_formWindowClosing

    private void tabelaBtGerarTriggerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaBtGerarTriggerActionPerformed
        tabelaAtualizaScript();
        if (nmTabelaTxt.getText().isEmpty() || nmTriggerTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Você não pode gerar a trigger sem"
                    + " o nome da tabela ou sem o nome da trigger!");
        } else {
            geraTrigger();
        }

    }//GEN-LAST:event_tabelaBtGerarTriggerActionPerformed

    private void nmTabelaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmTabelaTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmTabelaTxtActionPerformed

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        if (evt.getClickCount() == 10) {
            JOptionPane.showMessageDialog(null, "¯\\_( ͡° ͜ʖ ͡°)_/¯");
        }
    }//GEN-LAST:event_jLabel21MouseClicked

    private void tabelaBtAtualizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaBtAtualizaActionPerformed
        tabelaAtualizaScript();
    }//GEN-LAST:event_tabelaBtAtualizaActionPerformed

    private void tabelaNmTabelaLogKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaNmTabelaLogKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaNmTabelaLogKeyTyped

    private void tabelaBtAddVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaBtAddVariavelActionPerformed
        tabelaAdicionaVariavel();
        itemListaVariavelTabelaSelecionado();
    }//GEN-LAST:event_tabelaBtAddVariavelActionPerformed

    private void tabelaBtRemoveVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaBtRemoveVariavelActionPerformed
        tabelaRemoveVariavel();
        itemListaVariavelTabelaSelecionado();
    }//GEN-LAST:event_tabelaBtRemoveVariavelActionPerformed

    private void nmTriggerTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmTriggerTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmTriggerTxtActionPerformed

    private void tabelaNmChavePrimariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaNmChavePrimariaActionPerformed

    }//GEN-LAST:event_tabelaNmChavePrimariaActionPerformed

    private void tabelaNmChavePrimariaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaNmChavePrimariaFocusLost
        if (tabelaTxtChavePrimaria.isEnabled() && tabelaNmChavePrimaria.getText().isEmpty()) {
            tabelaTxtChavePrimaria.setText("");
            tabelaTxtChavePrimaria.setEnabled(false);
        } else if (!tabelaTxtChavePrimaria.isEnabled() && !tabelaNmChavePrimaria.getText().isEmpty()) {
            tabelaTxtChavePrimaria.setEnabled(true);
        }

    }//GEN-LAST:event_tabelaNmChavePrimariaFocusLost

    private void objetoBtSubirVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoBtSubirVariavelActionPerformed
        boolean listaVaziaOuItemUnico = objetosListaAtributos.size() == 0 || objetosListaAtributos.size() == 1;
        if (!listaVaziaOuItemUnico) {
            int index = objetoListaVariaveis.getSelectedIndex();
            // Swap values at positions index-1 and index.
            String temp = objetosListaAtributos.get(index - 1); // Save value before overwrite.
            objetosListaAtributos.set(index - 1, objetosListaAtributos.get(index)); // First half of swap.
            objetosListaAtributos.set(index, temp); // Final operation for swap.

            this.objetoAtualizaLista();
            objetoListaVariaveis.setSelectedIndex(index - 1);

        }
    }//GEN-LAST:event_objetoBtSubirVariavelActionPerformed

    private void tabelaListaVariaveisPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tabelaListaVariaveisPropertyChange

    }//GEN-LAST:event_tabelaListaVariaveisPropertyChange

    private void objetoBtDescerVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objetoBtDescerVariavelActionPerformed
        boolean listaVaziaOuItemUnico = objetosListaAtributos.size() == 0 || objetosListaAtributos.size() == 1;
        if (!listaVaziaOuItemUnico) {
            int index = objetoListaVariaveis.getSelectedIndex();
            // Swap values at positions index-1 and index.
            String temp = objetosListaAtributos.get(index + 1); // Save value before overwrite.
            objetosListaAtributos.set(index + 1, objetosListaAtributos.get(index)); // First half of swap.
            objetosListaAtributos.set(index, temp); // Final operation for swap.

            this.objetoAtualizaLista();
            objetoListaVariaveis.setSelectedIndex(index + 1);

        }
    }//GEN-LAST:event_objetoBtDescerVariavelActionPerformed

    public void alterarOrdemLinkedHashMap(int mudanca, int idx) {
        Object array[] = tabelaListaAtributos.keySet().toArray();
        String temp = (String) array[idx + mudanca];
        array[idx + mudanca] = array[idx];
        array[idx] = temp;
        LinkedHashMap lista = new LinkedHashMap();
        for (int i = 0; i < array.length; i++) {
            lista.put(array[i], this.tabelaListaAtributos.get(array[i]));
            System.out.println(array[i] + ": " + this.tabelaListaAtributos.get(array[i]));
        }
        this.tabelaListaAtributos = lista;
    }
    private void tabelaBtSubirVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaBtSubirVariavelActionPerformed
        boolean listaVaziaOuItemUnico = tabelaListaAtributos.size() == 0 || tabelaListaAtributos.size() == 1;
        if (!listaVaziaOuItemUnico) {
            int index = tabelaListaVariaveis.getSelectedIndex();
            alterarOrdemLinkedHashMap(-1, index);
            this.tabelaAtualizaLista();
            tabelaListaVariaveis.setSelectedIndex(index - 1);
        }
    }//GEN-LAST:event_tabelaBtSubirVariavelActionPerformed

    private void tabelaBtDescerVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelaBtDescerVariavelActionPerformed
        boolean listaVaziaOuItemUnico = tabelaListaAtributos.size() == 0 || tabelaListaAtributos.size() == 1;
        if (!listaVaziaOuItemUnico) {
            int index = tabelaListaVariaveis.getSelectedIndex();
            alterarOrdemLinkedHashMap(+1, index);
            this.tabelaAtualizaLista();
            tabelaListaVariaveis.setSelectedIndex(index + 1);
        }
    }//GEN-LAST:event_tabelaBtDescerVariavelActionPerformed

    private void jchboxDsComandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchboxDsComandoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchboxDsComandoActionPerformed
    private String atualizaAspasOracle(String texto) {
        return nvl(texto, "").replace("'", "''");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        BasicLookAndFeel darcula = new DarculaLaf();
        try {
            UIManager.setLookAndFeel(darcula);
            //</editor-fold>
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(telaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private telaPrincipal tela;

            public void run() {
                tela = new telaPrincipal();
                tela.setVisible(true);
                tela.objetoAtualizaScript();
                tela.tabelaAtualizaScript();
                tela.objetoAtualizaLista();
                tela.tabelaAtualizaLista();
                tela.itemListaVariavelObjetoSelecionado();
                tela.itemListaVariavelTabelaSelecionado();
                URL url = System.class.getResource("/br/com/philips/gdl/log.png");
                try {
                    java.awt.Image image = ImageIO.read(url);
                    tela.setIconImage(image);
                } catch (IOException ex) {
                    Logger.getLogger(telaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel checkBoxQuebra;
    private javax.swing.JLabel checkBoxQuebra1;
    private javax.swing.JLabel checkBoxQuebra2;
    private javax.swing.JLabel checkBoxQuebra3;
    private javax.swing.JLabel checkBoxQuebra4;
    private javax.swing.JTextArea dsScriptOriginal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JCheckBox jchboxCommitInsert;
    private javax.swing.JCheckBox jchboxDsComando;
    private javax.swing.JCheckBox jchboxQuebraLinha;
    private javax.swing.JCheckBox jchboxStackTrace;
    private javax.swing.JTextField nmTabelaTxt;
    private javax.swing.JTextField nmTriggerTxt;
    private javax.swing.JToggleButton objetoBtAddVariavel;
    private javax.swing.JToggleButton objetoBtAtualiza;
    private javax.swing.JToggleButton objetoBtDescerVariavel;
    private javax.swing.JButton objetoBtRemoveVariavel;
    private javax.swing.JToggleButton objetoBtSubirVariavel;
    private javax.swing.JButton objetoBtnGerar;
    private javax.swing.JTextArea objetoDsCreateTable;
    private javax.swing.JTextArea objetoDsScriptLimpar;
    private javax.swing.JTextArea objetoDsScriptSaida;
    private javax.swing.JRadioButton objetoJrbDias;
    private javax.swing.JRadioButton objetoJrbHoras;
    private javax.swing.JRadioButton objetoJrbMaskCompleta;
    private javax.swing.JRadioButton objetoJrbSemMask;
    private javax.swing.JList objetoListaVariaveis;
    private javax.swing.JTextField objetoNmObjeto;
    private javax.swing.JTextField objetoNmTabelaLog;
    private javax.swing.JToggleButton tabelaBtAddVariavel;
    private javax.swing.JToggleButton tabelaBtAtualiza;
    private javax.swing.JToggleButton tabelaBtDescerVariavel;
    private javax.swing.JButton tabelaBtGerarTrigger;
    private javax.swing.JButton tabelaBtRemoveVariavel;
    private javax.swing.JToggleButton tabelaBtSubirVariavel;
    private javax.swing.JTextArea tabelaDsCreateTable;
    private javax.swing.JTextArea tabelaDsDeleteTable;
    private javax.swing.JTextArea tabelaDsTrigger;
    private javax.swing.JRadioButton tabelaJrBMaskCompleta;
    private javax.swing.JRadioButton tabelaJrbDias;
    private javax.swing.JRadioButton tabelaJrbHoras;
    private javax.swing.JRadioButton tabelaJrbSemMask;
    private javax.swing.JLabel tabelaLabel;
    private javax.swing.JLabel tabelaLabel1;
    private javax.swing.JList tabelaListaVariaveis;
    private javax.swing.JTextField tabelaNmChavePrimaria;
    private javax.swing.JTextField tabelaNmTabelaLog;
    private javax.swing.JTextField tabelaTxtChavePrimaria;
    private javax.swing.JPanel tbAbaObjeto;
    private javax.swing.JPanel tbAbaTabela;
    private javax.swing.JTabbedPane tpAbaPane;
    private javax.swing.JTextField txtTabelaVariavelNome;
    private javax.swing.JTextField txtTabelaVariavelTextoCondicao;
    private javax.swing.JTextField txtVariavelNome;
    private javax.swing.JTextField txtVariavelTextoCondicao;
    // End of variables declaration//GEN-END:variables
    public void objetoAtualizaScript() {
        dsNomeObjetoTabelaLog = nvl(objetoNmTabelaLog.getText(), "SO");
        dsScriptObjetoTabelaLog = "CREATE SEQUENCE " + dsNomeObjetoTabelaLog + "_seq START WITH 1; \n"
                + "CREATE TABLE " + dsNomeObjetoTabelaLog + " (\n"
                + "ID           NUMBER(10),\n"
                + "DS_LOG       VARCHAR2(4000),\n"
                + "DS_STACK     VARCHAR2(4000),\n"
                + "DS_COMANDO   VARCHAR2(4000),\n"
                + "DT_DATA      DATE);\n"
                + "ALTER TABLE " + dsNomeObjetoTabelaLog + " ADD (\n"
                + "CONSTRAINT " + dsNomeObjetoTabelaLog + "_pk PRIMARY KEY (ID));";
        objetoDsCreateTable.setText(dsScriptObjetoTabelaLog);

        String dsScriptExclusaoTabela = "DROP SEQUENCE " + dsNomeObjetoTabelaLog + "_seq;\n"
                + "truncate table  " + dsNomeObjetoTabelaLog + ";\n"
                + "drop table  " + dsNomeObjetoTabelaLog + ";";
        objetoDsScriptLimpar.setText(dsScriptExclusaoTabela);
    }

    public void tabelaAtualizaScript() {
        dsNomeTabelaTabelaLog = nvl(tabelaNmTabelaLog.getText(), "SO");
        dsScriptTabelaTabelaLog = "CREATE SEQUENCE " + dsNomeTabelaTabelaLog + "_seq START WITH 1; \n"
                + "CREATE TABLE " + dsNomeTabelaTabelaLog + " (\n"
                + "ID          NUMBER(10),\n"
                + "DS_LOG      VARCHAR2(4000),\n"
                + "DS_STACK    VARCHAR2(4000),\n"
                + "DS_COMANDO  VARCHAR2(4000),\n"
                + "DT_DATA      DATE);\n"
                + "ALTER TABLE " + dsNomeTabelaTabelaLog + " ADD (\n"
                + "CONSTRAINT " + dsNomeTabelaTabelaLog + "_pk PRIMARY KEY (ID));";
        tabelaDsCreateTable.setText(dsScriptTabelaTabelaLog);

        String dsScriptExclusaoTabela = "DROP SEQUENCE " + dsNomeTabelaTabelaLog + "_seq;\n"
                + "truncate table  " + dsNomeTabelaTabelaLog + ";\n"
                + "drop table  " + dsNomeTabelaTabelaLog + ";\n"
                + "drop trigger " + getNomeTrigger();
        tabelaDsDeleteTable.setText(dsScriptExclusaoTabela);
    }

    public static String nvl(String value, String alternateValue) {
        if (value == null || value.isEmpty()) {
            return alternateValue;
        }
        return value;
    }

    public void objetoAtualizaLista() {
        objetoListaVariaveis.setModel(new javax.swing.AbstractListModel() {
            String variaveis[] = objetosListaAtributos.toArray(new String[0]);

            public int getSize() {
                return variaveis.length;
            }

            public Object getElementAt(int i) {
                return variaveis[i];
            }
        });
    }

    private void tabelaAtualizaLista() {
        tabelaListaVariaveis.setModel(new javax.swing.AbstractListModel() {
            Object variaveis[] = tabelaListaAtributos.keySet().toArray();

            public int getSize() {
                return variaveis.length;
            }

            public Object getElementAt(int i) {
                return variaveis[i];
            }
        });
    }

    private void itemListaVariavelObjetoSelecionado() {
        if (objetoListaVariaveis.getSelectedIndex() != -1) {
            boolean listaVaziaOuItemUnico = objetosListaAtributos.size() == 0 || objetosListaAtributos.size() == 1;
            boolean ultimaDalista = objetoListaVariaveis.getSelectedIndex() + 1 == objetosListaAtributos.size();
            boolean primeiroDaLista = objetoListaVariaveis.getSelectedIndex() == 0;
            objetoBtSubirVariavel.setEnabled(!listaVaziaOuItemUnico && !primeiroDaLista);
            objetoBtDescerVariavel.setEnabled(!listaVaziaOuItemUnico && !ultimaDalista);
        } else {
            objetoBtSubirVariavel.setEnabled(false);
            objetoBtDescerVariavel.setEnabled(false);
        }
    }

    private void itemListaVariavelTabelaSelecionado() {
        if (tabelaListaVariaveis.getSelectedIndex() != -1) {
            boolean listaVaziaOuItemUnico = tabelaListaAtributos.size() == 0 || tabelaListaAtributos.size() == 1;
            boolean ultimaDalista = tabelaListaVariaveis.getSelectedIndex() + 1 == tabelaListaAtributos.size();
            boolean primeiroDaLista = tabelaListaVariaveis.getSelectedIndex() == 0;
            tabelaBtSubirVariavel.setEnabled(!listaVaziaOuItemUnico && !primeiroDaLista);
            tabelaBtDescerVariavel.setEnabled(!listaVaziaOuItemUnico && !ultimaDalista);
        } else {
            tabelaBtSubirVariavel.setEnabled(false);
            tabelaBtDescerVariavel.setEnabled(false);
        }
    }

    private void objetoAdicionaVariavel() {
        String valor = nvl(JOptionPane.showInputDialog("Nome da variável"), "ds");
        this.objetosListaAtributos.add(valor);
        objetoAtualizaLista();

    }

    private void tabelaAdicionaVariavel() {
        String[] lista = janelaVariavel();
        if (lista != null) {
            this.tabelaListaAtributos.put(lista[0], lista[1]);
        }
        tabelaAtualizaLista();
    }

    private void tabelaRemoveVariavel() {
        String valor = (String) tabelaListaVariaveis.getSelectedValue();
        if (valor != null) {
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente remover essa variável?") == JOptionPane.YES_OPTION) {
                this.tabelaListaAtributos.remove(valor);
                tabelaAtualizaLista();
            }
        }
    }

    private void objetoRemoveVariavel() {
        int index = objetoListaVariaveis.getSelectedIndex();
        if (index > -1) {
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente remover essa variável?") == JOptionPane.YES_OPTION) {
                this.objetosListaAtributos.remove(index);
                objetoAtualizaLista();
            }
        }
    }

    private String objetoMontaVariavelLog() {
        String quebraLinha = jchboxQuebraLinha.isSelected() ? "||  CHR(10)" : " ";

        String vars = "|| ' linha:' || $$plsql_line " + quebraLinha;
        for (String objs : objetosListaAtributos) {
            vars += " || '| " + atualizaAspasOracle(objs) + ": ' || " + objetoMontaValor(objs) + quebraLinha;
        }
        //return ((txtNmUsuarioP.getText() != null && !txtNmUsuarioP.getText().trim().isEmpty()) ? "if(nm_usuario_p = '" + txtNmUsuarioP.getText() + "') then " : "") + "INSERT INTO " + nvl(dsNomeTabelaLog, "NOME_TABELA_VAZIA") + " VALUES (('" + nvl(nmObjeto.getText(), "NOME_OBJETO_VAZIO") + "'" + vars + ") , sysdate)" + (this.jchboxCommitInsert.isSelected() ? ";commit" : "") + ";" + ((txtNmUsuarioP.getText() != null && !txtNmUsuarioP.getText().trim().isEmpty()) ? "end if;" : "");
        String retorno = "";
        if ((txtVariavelNome.getText() != null && !txtVariavelNome.getText().trim().isEmpty()) && (txtVariavelTextoCondicao.getText() != null && !txtVariavelTextoCondicao.getText().trim().isEmpty())) {
            retorno += "if("+txtVariavelNome.getText()+" = '" + txtVariavelTextoCondicao.getText() + "') then ";
        }
        retorno += "INSERT INTO " + nvl(dsNomeObjetoTabelaLog, "NOME_TABELA_VAZIA") + " VALUES (" + dsNomeObjetoTabelaLog + "_seq.nextval,"
                + "('" + nvl(objetoNmObjeto.getText(), "NOME_OBJETO_VAZIO") + "'" + vars + "), ";

        retorno += jchboxStackTrace.isSelected() ? "(' | Stacktrace: '||  CHR(10) || SUBSTR(DBMS_UTILITY.FORMAT_CALL_STACK,1,2000))," : "(null),";
        if (jchboxDsComando.isSelected()) {
            retorno += "'" + atualizaAspasOracle(retorno);
            retorno += "(comando insert))";
            retorno += "',";
        } else {
            retorno += "(null),";
        }

        retorno += "(sysdate)";

        retorno += ")";
        if (this.jchboxCommitInsert.isSelected()) {
            retorno += ";commit";
        }
        retorno += ";";
        if ((txtVariavelNome.getText() != null && !txtVariavelNome.getText().trim().isEmpty()) && (txtVariavelTextoCondicao.getText() != null && !txtVariavelTextoCondicao.getText().trim().isEmpty())) {
            retorno += "end if;";
        }
        return retorno;
    }

    private String objetoMontaValor(String var) {
        String retorno = var != null ? var.toUpperCase() : null;
        if (retorno != null && retorno.startsWith("DT_")) {
            if (this.objetoJrbMaskCompleta.isSelected()) {
                retorno = "to_char(" + var + ",'dd/mm/yyyy hh24:mi:ss')";
            } else if (this.objetoJrbDias.isSelected()) {
                retorno = "to_char(" + var + ",'dd/mm/yyyy')";
            } else if (this.objetoJrbHoras.isSelected()) {
                retorno = "to_char(" + var + ",'hh24:mi:ss')";
            }
        }
        return retorno;
    }

    private void geraTrigger() {
        //TODO Não deixar gerar o texto trigger sem o nome da tabela.
        String trigger = "CREATE  OR REPLACE  TRIGGER " + getNomeTrigger() + "\n"
                + "AFTER INSERT OR UPDATE\n"
                + "   ON " + nmTabelaTxt.getText() + "\n"
                + "    FOR EACH ROW \n"
                + "\n"
                + "DECLARE\n"
                + "     ds_erro_w                               varchar2(2000);\n"
                + "     ds_stack_w				varchar2(2000);\n"
                + "     ds_log_w                                varchar2(2000);\n"
                + "     dt_min_date_w                           date := to_date('30/12/1899 00:00:00', 'dd/mm/yyyy hh24:mi:ss'); \n"
                + "\n"
                + "BEGIN\n"
                + montaLinhasTrigger()
                + "\n"
                + montaVerificaoRegistro()
                + "\n"
                + montaVerificaoException()
                + "\n"
                + "END;";
        tabelaDsTrigger.setText(trigger);
    }

    private void objetoBtnGerarAction() {
        objetoAtualizaScript();
        String textoOriginal = dsScriptOriginal.getText();
        if (textoOriginal == null || textoOriginal.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Aviso, o campo script original está vazio.");
            return;
        }
        String stringLog = objetoMontaVariavelLog();
        System.out.println(stringLog);
        objetoDsScriptSaida.setText(textoOriginal.replace("then", " then \n " + stringLog));
        objetoDsScriptSaida.setText(objetoDsScriptSaida.getText().replace("THEN", " THEN \n " + stringLog));
        objetoDsScriptSaida.setText(objetoDsScriptSaida.getText().replace("else", " else \n " + stringLog));
        objetoDsScriptSaida.setText(objetoDsScriptSaida.getText().replace("ELSE", " ELSE \n " + stringLog));
    }

    private static String[] janelaVariavel() {
        JComboBox cbTipoVariavel = new javax.swing.JComboBox();
        cbTipoVariavel.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Varchar2", "Number", "Date"}));

        JTextField nomeVariavel = new JTextField();
        Object[] message = {
            "Nome atributo:", nomeVariavel,
            "Tipo:", cbTipoVariavel
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Escolha uma opção", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION && !nomeVariavel.getText().trim().isEmpty()) {
            String[] valores = new String[2];
            valores[0] = nomeVariavel.getText();
            valores[1] = cbTipoVariavel.getSelectedItem().toString();
            return valores;
        }
        return null;
    }

    private String montaLinhasTrigger() {
        String retorno = "";
        for (Map.Entry<String, String> entry : tabelaListaAtributos.entrySet()) {
            String nome = entry.getKey();
            String tipo = entry.getValue();
            if (nome != null && !nome.isEmpty()) {

                if ("Varchar2".equals(tipo)) {
                    retorno += "    if (nvl(:new." + nome + ",'XPTO') <> nvl(:old." + nome + ",'XPTO')) then\n"
                            + "         ds_log_w	:= substr(ds_log_w  || ' " + nome + "(' || nvl(:old." + nome + ",'<NULL>') || ' / ' || nvl(:new." + nome + ",'<NULL>')||'); ',1,2000);\n"
                            + "         ds_log_w	:= substr(ds_log_w  || CHR(10),1,2000);\n"
                            + "     end if;\n";
                } else if ("Date".equals(tipo)) {
                    String formatoData = "to_char(:old." + nome + ",'dd/mm/yyyy hh24:mi:ss')";
                    String newFormatData = "to_char(:new." + nome + ",'dd/mm/yyyy hh24:mi:ss')";
                    if (this.tabelaJrBMaskCompleta.isSelected()) {
                        newFormatData = "to_char(:new." + nome + ",'dd/mm/yyyy hh24:mi:ss')";
                        formatoData = "to_char(:old." + nome + ",'dd/mm/yyyy hh24:mi:ss')";
                    } else if (this.tabelaJrbDias.isSelected()) {
                        newFormatData = "to_char(:new." + nome + ",'dd/mm/yyyy')";
                        formatoData = "to_char(:old." + nome + ",'dd/mm/yyyy')";
                    } else if (this.tabelaJrbHoras.isSelected()) {
                        newFormatData = "to_char(:new." + nome + ",'hh24:mi:ss')";
                        formatoData = "to_char(:old." + nome + ",'hh24:mi:ss')";
                    }
                    retorno += "    if (nvl(:new." + nome + ", dt_min_date_w) <> nvl(:old." + nome + ", dt_min_date_w)) then\n"
                            + "         ds_log_w	:= substr(ds_log_w  || ' " + nome + "(' || nvl(" + formatoData + ",'<NULL>') || ' / ' || nvl(" + newFormatData + ",'<NULL>')||'); ',1,2000);\n"
                            + "         ds_log_w	:= substr(ds_log_w  || CHR(10),1,2000);\n"
                            + "     end if;\n";
                } else if ("Number".equals(tipo)) {
                    retorno += "    if (nvl(:new." + nome + ",0) <> nvl(:old." + nome + ",0)) then\n"
                            + "         ds_log_w	:= substr(ds_log_w  || ' " + nome + "(' || nvl(:old." + nome + ",0) || ' / ' || nvl(:new." + nome + ",0)||'); ',1,2000);\n"
                            + "         ds_log_w	:= substr(ds_log_w  || CHR(10),1,2000);\n"
                            + "    end if;\n";
                }
            }

        }
        return retorno;
    }

    private String montaVerificaoRegistro() {
        String retorno = "";
        retorno = "     if (ds_log_w is not null";
        if ((!txtTabelaVariavelNome.getText().isEmpty() && !txtTabelaVariavelTextoCondicao.getText().isEmpty())) {
            if (txtTabelaVariavelNome.getText().startsWith(":new.")) {
                retorno += " AND " + txtTabelaVariavelNome.getText() + " = '" + txtTabelaVariavelTextoCondicao.getText() + "'";
            } else {
                retorno += " AND :new." + txtTabelaVariavelNome.getText() + " = '" + txtTabelaVariavelTextoCondicao.getText() + "'";
            }
        }
        retorno += (!tabelaTxtChavePrimaria.getText().isEmpty() ? " AND :new." + tabelaNmChavePrimaria.getText() + " = " + tabelaTxtChavePrimaria.getText() + "" : "")
                + ") then\n"
                + "	\n";
        if (tabelaNmChavePrimaria.getText() != null && !tabelaNmChavePrimaria.getText().isEmpty()) {
            retorno += "        if ((nvl(:old." + tabelaNmChavePrimaria.getText() + ", 0) > 0)) then\n"
                    + "                 ds_log_w := CHR(10) || substr('" + nmTabelaTxt.getText() + " Alterações (old/new)= ' || ds_log_w,1,2000);\n"
                    + "         else\n"
                    + "                 ds_log_w := CHR(10) || substr('" + nmTabelaTxt.getText() + " Criação (old/new)= ' || ds_log_w,1,2000);\n"
                    + "         end if;\n";
        } else {
            retorno += "        ds_log_w := CHR(10) || substr('" + nmTabelaTxt.getText() + " Alterações (old/new)= ' || ds_log_w,1,2000);\n";
        }
        if (tabelaNmChavePrimaria.getText() != null && !tabelaNmChavePrimaria.getText().isEmpty()) {
            retorno
                    += "        ds_log_w := substr(ds_log_w || ' " + tabelaNmChavePrimaria.getText() + ": ('||:new." + tabelaNmChavePrimaria.getText() + "|| ');',1,2000);\n";
        }
        retorno += "	\n"
                + "         ds_stack_w	:= substr(dbms_utility.format_call_stack,1,2000);\n"
                //+ "         ds_log_w := substr(ds_log_w ||' FUNCAO('||to_char(obter_funcao_ativa)||'); PERFIL('||to_char(obter_perfil_ativo)||');',1,2000);\n"
                + "	\n"
                + "         INSERT INTO " + nvl(dsNomeTabelaTabelaLog, "NOME_TABELA_VAZIA") + " VALUES (" + dsNomeTabelaTabelaLog + "_seq.nextval,('" + getNomeTrigger() + " '" + "|| ds_log_w ), (ds_stack_w), ('" + getNomeTrigger() + "') ,sysdate);\n"
                + "     end if;\n";

        return retorno;
    }

    private String montaVerificaoException() {
        String retorno = "  EXCEPTION\n"
                + "     when others then \n"
                + "         ds_erro_w   :=  SUBSTR(SQLERRM, 1, 2000);\n"
                + "         ds_stack_w  := substr(dbms_utility.format_call_stack,1,2000);\n"
                + "         INSERT INTO " + nvl(dsNomeTabelaTabelaLog, "NOME_TABELA_VAZIA") + " VALUES (" + dsNomeTabelaTabelaLog + "_seq.nextval,('EXCEPTION " + getNomeTrigger() + "- Erro:'|| ds_erro_w),(ds_stack_w) ,('" + getNomeTrigger() + "'),sysdate);";

        return retorno;
    }

    private String getNomeTrigger() {
        return nvl(nmTriggerTxt.getText(), "NomeTabelaVazia");
    }
 

}
